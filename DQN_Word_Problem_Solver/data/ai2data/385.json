{"sentences": [{"parsetree": "(ROOT (S (NP (NNP Sandy)) (VP (VBD grew) (NP (NP (CD 8) (NNS carrots)) (CC and) (NP (CD 7) (NNS turnips)))) (. .)))", "text": "Sandy grew 8 carrots and 7 turnips .", "dependencies": [["root", "ROOT", "grew"], ["nsubj", "grew", "Sandy"], ["num", "carrots", "8"], ["dobj", "grew", "carrots"], ["num", "turnips", "7"], ["conj_and", "carrots", "turnips"]], "words": [["Sandy", {"NamedEntityTag": "PERSON", "CharacterOffsetEnd": "5", "CharacterOffsetBegin": "0", "PartOfSpeech": "NNP", "Lemma": "Sandy"}], ["grew", {"NamedEntityTag": "O", "CharacterOffsetEnd": "10", "CharacterOffsetBegin": "6", "PartOfSpeech": "VBD", "Lemma": "grow"}], ["8", {"NormalizedNamedEntityTag": "8.0", "Lemma": "8", "CharacterOffsetEnd": "12", "PartOfSpeech": "CD", "CharacterOffsetBegin": "11", "NamedEntityTag": "NUMBER"}], ["carrots", {"NamedEntityTag": "O", "CharacterOffsetEnd": "20", "CharacterOffsetBegin": "13", "PartOfSpeech": "NNS", "Lemma": "carrot"}], ["and", {"NamedEntityTag": "O", "CharacterOffsetEnd": "24", "CharacterOffsetBegin": "21", "PartOfSpeech": "CC", "Lemma": "and"}], ["7", {"NormalizedNamedEntityTag": "7.0", "Lemma": "7", "CharacterOffsetEnd": "26", "PartOfSpeech": "CD", "CharacterOffsetBegin": "25", "NamedEntityTag": "NUMBER"}], ["turnips", {"NamedEntityTag": "O", "CharacterOffsetEnd": "34", "CharacterOffsetBegin": "27", "PartOfSpeech": "NNS", "Lemma": "turnip"}], [".", {"NamedEntityTag": "O", "CharacterOffsetEnd": "36", "CharacterOffsetBegin": "35", "PartOfSpeech": ".", "Lemma": "."}]]}, {"parsetree": "(ROOT (S (NP (NNP Mary)) (VP (VBD grew) (NP (CD 6) (NNS carrots))) (. .)))", "text": "Mary grew 6 carrots .", "dependencies": [["root", "ROOT", "grew"], ["nsubj", "grew", "Mary"], ["num", "carrots", "6"], ["dobj", "grew", "carrots"]], "words": [["Mary", {"NamedEntityTag": "PERSON", "CharacterOffsetEnd": "41", "CharacterOffsetBegin": "37", "PartOfSpeech": "NNP", "Lemma": "Mary"}], ["grew", {"NamedEntityTag": "O", "CharacterOffsetEnd": "46", "CharacterOffsetBegin": "42", "PartOfSpeech": "VBD", "Lemma": "grow"}], ["6", {"NormalizedNamedEntityTag": "6.0", "Lemma": "6", "CharacterOffsetEnd": "48", "PartOfSpeech": "CD", "CharacterOffsetBegin": "47", "NamedEntityTag": "NUMBER"}], ["carrots", {"NamedEntityTag": "O", "CharacterOffsetEnd": "56", "CharacterOffsetBegin": "49", "PartOfSpeech": "NNS", "Lemma": "carrot"}], [".", {"NamedEntityTag": "O", "CharacterOffsetEnd": "58", "CharacterOffsetBegin": "57", "PartOfSpeech": ".", "Lemma": "."}]]}, {"parsetree": "(ROOT (SBARQ (WHADVP (WRB How) (NP (JJ many) (NNS carrots))) (SQ (VBD did) (NP (PRP they)) (VP (VB grow) (PP (IN in) (NP (DT all))))) (. ?)))", "text": "How many carrots did they grow in all ?", "dependencies": [["root", "ROOT", "grow"], ["advmod", "grow", "How"], ["amod", "carrots", "many"], ["dep", "How", "carrots"], ["aux", "grow", "did"], ["nsubj", "grow", "they"], ["prep_in", "grow", "all"]], "words": [["How", {"NamedEntityTag": "O", "CharacterOffsetEnd": "62", "CharacterOffsetBegin": "59", "PartOfSpeech": "WRB", "Lemma": "how"}], ["many", {"NamedEntityTag": "O", "CharacterOffsetEnd": "67", "CharacterOffsetBegin": "63", "PartOfSpeech": "JJ", "Lemma": "many"}], ["carrots", {"NamedEntityTag": "O", "CharacterOffsetEnd": "75", "CharacterOffsetBegin": "68", "PartOfSpeech": "NNS", "Lemma": "carrot"}], ["did", {"NamedEntityTag": "O", "CharacterOffsetEnd": "79", "CharacterOffsetBegin": "76", "PartOfSpeech": "VBD", "Lemma": "do"}], ["they", {"NamedEntityTag": "O", "CharacterOffsetEnd": "84", "CharacterOffsetBegin": "80", "PartOfSpeech": "PRP", "Lemma": "they"}], ["grow", {"NamedEntityTag": "O", "CharacterOffsetEnd": "89", "CharacterOffsetBegin": "85", "PartOfSpeech": "VB", "Lemma": "grow"}], ["in", {"NamedEntityTag": "O", "CharacterOffsetEnd": "92", "CharacterOffsetBegin": "90", "PartOfSpeech": "IN", "Lemma": "in"}], ["all", {"NamedEntityTag": "O", "CharacterOffsetEnd": "96", "CharacterOffsetBegin": "93", "PartOfSpeech": "DT", "Lemma": "all"}], ["?", {"NamedEntityTag": "O", "CharacterOffsetEnd": "98", "CharacterOffsetBegin": "97", "PartOfSpeech": ".", "Lemma": "?"}]]}]}